name: CI/CD para app médica - OGM

permissions:
  pull-requests: write
  issues: write

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  pruebas_pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Comentario inicial en el PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "CI/CD en acción. Ejecutando tareas …"
            })

      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install flask flask_cors pytest

      - name: Ejecutar pruebas con pytest
        run: pytest tests/test_app.py

      - name: Comentario final en el PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "CI/CD terminado con éxito."
            })

  pruebas_y_docker_push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install flask flask_cors pytest

      - name: Ejecutar pruebas con pytest
        run: pytest tests/test_app.py

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Construir y publicar imagen Docker
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/app-medica:latest .
          docker push ghcr.io/${{ github.repository_owner }}/app-medica:latest
